{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.PATH_OF_API = 'http://localhost:8080/authenticate'; // Remplacez par l'URL de votre backend\n    } // Injectez Router ici\n    login(username, password) {\n      return this.http.post(this.PATH_OF_API, {\n        userName: username,\n        userPassword: password\n      }).pipe(map(response => {\n        if (response && response.jwtToken) {\n          localStorage.setItem('token', response.jwtToken);\n          localStorage.setItem('roles', JSON.stringify(response.roles));\n          this.router.navigate(['/home']);\n        }\n        return response;\n      }));\n    }\n    logout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('roles');\n      this.router.navigate(['/login']); // Redirection vers la page de login après déconnexion\n    }\n    getToken() {\n      return localStorage.getItem('token');\n    }\n    getRoles() {\n      return JSON.parse(localStorage.getItem('roles') || '[]');\n    }\n    isLoggedIn() {\n      return this.getToken() !== null;\n    }\n    getProtectedData(url) {\n      const token = this.getToken();\n      let headers = new HttpHeaders();\n      if (token) {\n        headers = headers.set('Authorization', `Bearer ${token}`);\n      }\n      return this.http.get(url, {\n        headers\n      });\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}